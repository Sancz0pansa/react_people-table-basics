{"version":3,"sources":["components/Loader/Loader.tsx","components/PeoplePage.tsx/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Loader","className","PeoplePage","useState","people","setPeople","loading","setLoading","loadingError","setLoadingError","slug","useParams","fetchData","fetch","then","response","json","result","peop","map","person","mother","find","human","name","motherName","father","fatherName","catch","useEffect","length","cn","sex","to","born","died","App","role","isActive","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.ee64b131.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types';\n\nconst preparePeople = (peop: Person[]) => {\n  return peop.map(person => {\n    const mother = peop.find(human => human.name === person.motherName);\n    const father = peop.find(human => human.name === person.fatherName);\n\n    return ({\n      ...person,\n      mother,\n      father,\n    });\n  });\n};\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[] | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [loadingError, setLoadingError] = useState(false);\n\n  const { slug } = useParams();\n\n  const fetchData = () => {\n    fetch('https://mate-academy.github.io/react_people-table/api/people.json')\n      .then((response) => response.json())\n      .then((result) => {\n        setPeople(preparePeople(result));\n        setLoading(false);\n      })\n      .catch(() => {\n        setLoading(false);\n        setLoadingError(true);\n      });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading && <Loader />}\n\n          {loadingError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {people?.length === 0 && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          ) }\n          {people && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map((person) => (\n\n                  <tr\n                    data-cy=\"person\"\n                    className={cn({\n                      'has-background-warning':\n                    slug === person.slug,\n                    })}\n                  >\n                    <td>\n                      <Link\n                        className={cn({\n                          'has-text-danger': person.sex === 'f',\n                        })}\n                        to={`${person.slug}`}\n                      >\n                        {person.name}\n                      </Link>\n                    </td>\n\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    <td>\n                      {person.mother\n                        ? (\n                          <Link\n                            className=\"has-text-danger\"\n                            to={`${person.mother.slug}`}\n                          >\n                            {person.motherName}\n                          </Link>\n                        )\n                        : person.motherName || '-'}\n\n                    </td>\n                    <td>\n                      {person.father\n                        ? (\n                          <Link\n                            to={`${person.father.slug}`}\n                          >\n                            {person.fatherName}\n                          </Link>\n                        )\n                        : person.fatherName || '-'}\n\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n\n        </div>\n      </div>\n\n    </>\n  );\n};\n","import {\n  NavLink, Navigate, Route, Routes,\n} from 'react-router-dom';\nimport cn from 'classnames';\nimport './App.scss';\nimport { PeoplePage } from './components/PeoplePage.tsx/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => cn('navbar-item',\n              { 'has-background-grey-lighter': isActive })}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => cn('navbar-item',\n              { 'has-background-grey-lighter': isActive })}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/people\" element={<PeoplePage />}>\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n        </Routes>\n\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}